//button
.menuBtn {
  position: absolute;
  z-index: 3;
  right: 35px;
  top: 35px;
  cursor: pointer;
  @include easeOut;

  .btnLine {
    width: 28px;
    height: 3px;
    margin: 0 0 5px 0;
    background: setTextColor($colour1);
    @include easeOut;
  }

  //Rotate Function
  &.close {
    transform: rotate(180deg);
    .btnLine {
      //line1 = rotate
      &:nth-child(1) {
        background: #9fc000;
        transform: rotate(45deg) translate(5px, 5px);
      }
      //line2 = hide
      &:nth-child(2) {
        opacity: 0;
      }
      //line3 = rotate
      &:nth-child(3) {
        background: #9fc000;
        transform: rotate(-45deg) translate(7px, -6px);
      }
    }
  }
}

//menu overlay
.menu {
  position: fixed;
  top: 0;
  width: 100%;
  opacity: 0.9;
  visibility: hidden;

  &.show {
    visibility: visible;
  }

  &Nav,
  &Brand {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    float: left;
    width: 50%;
    height: 100vh;
    overflow: hidden;
  }

  &Nav {
    margin: 0;
    padding: 0;
    background: darken($colour1, 5);
    list-style: none;
    transform: translate3d(0, -100%, 0);
    @include easeOut;
    &.show {
      transform: translate3d(0, 0, 0);
    }
  }

  //branding
  &Brand {
    background: darken($colour1, 5);
    transform: translate3d(0, 100%, 0);
    @include easeOut;
    &.show {
      transform: translate3d(0, 0, 0);
    }
  }

  .portrait {
    width: 300px;
    height: 300px;
    background: url("../img/a01.png");
    border-radius: 50%;
    border: solid 3px $colour2;
  }
  //navLink
  .navLink {
    display: inline-block;
    position: relative;
    font-size: 30px;
    text-transform: uppercase;
    padding: 1rem, 0;
    font-weight: 300;
    color: setTextColor($colour1);
    text-decoration: none;
    @include easeOut;

    &:hover {
      color: $colour2;
    }
  }
  .navItem {
    transform: translate3d(60px, 0, 0);
    @include easeOut;
    &.show {
      transform: translate3d(0, 0, 0);
    }
    &.current > a {
      color: $colour2;
    }
  }
}

//create a delay effect
@for $x from 1 through 4 {
  .navLink:nth-child(#{$x}) {
    transition-delay: $x * 0.1s;
  }
}
